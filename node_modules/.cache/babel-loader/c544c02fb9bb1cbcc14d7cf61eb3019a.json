{"ast":null,"code":"import _slicedToArray from\"/Users/gavinshrader/Sites/gavinshr.com/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useRef}from\"react\";import'./ThemeController.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ThemeController(){/*\n   * Handle State Changes For UI - Toggle Button, Close Select Panel, etc.\n   */var _useState=useState('theme-controller-hidden'),_useState2=_slicedToArray(_useState,2),bgState=_useState2[0],setBgState=_useState2[1];var _useState3=useState('toggle-button-shown'),_useState4=_slicedToArray(_useState3,2),buttonState=_useState4[0],setButtonState=_useState4[1];var _useState5=useState('selector-panel-hidden'),_useState6=_slicedToArray(_useState5,2),panelState=_useState6[0],setPanelState=_useState6[1];var toggleButtonRef=useRef(null);var selectPanelRef=useRef(null);useEffect(function(){/* Close the settings menu when the user clicks outside of it */var closeDrawer=function closeDrawer(event){if(toggleButtonRef.current&&toggleButtonRef.current.contains(event.target)){return;}if(selectPanelRef.current&&selectPanelRef.current.contains(event.target)){return;}setBgState('theme-controller-hidden');setButtonState('toggle-button-shown');setPanelState('selector-panel-hidden');document.body.style.overflowY=\"scroll\";};document.addEventListener(\"mouseup\",closeDrawer);return function(){document.removeEventListener(\"mouseup\",closeDrawer);};},[]);/*\n   * Handle Theme Toggling\n   */var toggleTheme=function toggleTheme(){var theme=localStorage.getItem('theme');if(theme==='dark'){// Toggle to light\nsetTheme('light');}else{// Toggle to dark\nsetTheme('dark');}};var setTheme=function setTheme(theme){document.documentElement.className=theme;localStorage.setItem('theme',theme);};var getTheme=function getTheme(){var theme=localStorage.getItem('theme');if(theme===null){localStorage.setItem('theme','dark');console.log(\"Manual override dark theme - unset in ls\");theme='dark';}theme&&setTheme(theme);};getTheme();/*\n    * Handle Starfield Toggling\n    */var toggleStarfield=function toggleStarfield(){var starfield=localStorage.getItem('starfield');if(starfield===null){localStorage.setItem('starfield','enabled');starfield='enabled';}if(starfield==='enabled'){// Toggle to disabled\nsetStarfield('disabled');}else{// Toggle to enabled\nsetStarfield('enabled');}};var setStarfield=function setStarfield(starfield){localStorage.setItem('starfield',starfield);if(starfield==='enabled'){document.getElementById('starfield').style.display='block';}else{document.getElementById('starfield').style.display='none';}};/*\n   * Render The ThemeController\n   */return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"theme-controller-background \".concat(bgState)}),/*#__PURE__*/_jsxs(\"div\",{className:\"theme-controller-container\",children:[/*#__PURE__*/_jsx(\"button\",{ref:toggleButtonRef,className:\"toggle-button \".concat(buttonState),onClick:function onClick(){setBgState('theme-controller-shown');setButtonState('toggle-button-hidden');setPanelState('selector-panel-shown');document.body.style.overflowY=\"hidden\";},children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-cog\"})}),/*#__PURE__*/_jsx(\"div\",{ref:selectPanelRef,className:\"selector-panel \".concat(panelState),children:/*#__PURE__*/_jsxs(\"div\",{className:\"selector-panel-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selector-panel-title-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"selector-panel-title-group-center\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-cog\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Settings\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-main-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Switch between light & dark mode:\"}),/*#__PURE__*/_jsx(\"button\",{className:\"settings-button\",onClick:toggleTheme,children:\"Toggle Theme\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enable & disable starfield animation:\"}),/*#__PURE__*/_jsx(\"button\",{className:\"settings-button\",onClick:toggleStarfield,children:\"Toggle Starfield\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"exit-button\",onClick:function onClick(){setBgState('theme-controller-hidden');setButtonState('toggle-button-shown');setPanelState('selector-panel-hidden');document.body.style.overflowY=\"scroll\";},children:\"\\xAB Done\"})]})})]})]});}","map":{"version":3,"sources":["/Users/gavinshrader/Sites/gavinshr.com/src/ThemeController/ThemeController.js"],"names":["useState","useEffect","useRef","ThemeController","bgState","setBgState","buttonState","setButtonState","panelState","setPanelState","toggleButtonRef","selectPanelRef","closeDrawer","event","current","contains","target","document","body","style","overflowY","addEventListener","removeEventListener","toggleTheme","theme","localStorage","getItem","setTheme","documentElement","className","setItem","getTheme","console","log","toggleStarfield","starfield","setStarfield","getElementById","display"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport './ThemeController.css'\n\nexport default function ThemeController() {\n  /*\n   * Handle State Changes For UI - Toggle Button, Close Select Panel, etc.\n   */\n\n  const [bgState, setBgState] = useState('theme-controller-hidden')\n  const [buttonState, setButtonState] = useState('toggle-button-shown')\n  const [panelState, setPanelState] = useState('selector-panel-hidden')\n  const toggleButtonRef = useRef(null)\n  const selectPanelRef = useRef(null)\n\n  useEffect(() => {\n    /* Close the settings menu when the user clicks outside of it */\n    const closeDrawer = (event) => {\n      if (toggleButtonRef.current && toggleButtonRef.current.contains(event.target)) {\n        return;\n      }\n      if (selectPanelRef.current && selectPanelRef.current.contains(event.target)) {\n        return;\n      }\n\n      setBgState('theme-controller-hidden')\n      setButtonState('toggle-button-shown')\n      setPanelState('selector-panel-hidden')\n      document.body.style.overflowY = \"scroll\"\n\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer)\n    return () => {\n      document.removeEventListener(\"mouseup\", closeDrawer)\n    }\n  }, []);\n\n  /*\n   * Handle Theme Toggling\n   */\n\n   const toggleTheme = () => {\n     const theme = localStorage.getItem('theme')\n     if (theme === 'dark') {\n       // Toggle to light\n       setTheme('light')\n     } else {\n       // Toggle to dark\n       setTheme('dark')\n     }\n   }\n\n   const setTheme = (theme) => {\n     document.documentElement.className = theme\n     localStorage.setItem('theme', theme)\n   }\n\n   const getTheme = () => {\n     let theme = localStorage.getItem('theme')\n\n     if (theme === null) {\n       localStorage.setItem('theme', 'dark')\n       console.log(\"Manual override dark theme - unset in ls\")\n       theme = 'dark'\n     }\n\n     theme && setTheme(theme)\n   }\n\n   getTheme()\n\n   /*\n    * Handle Starfield Toggling\n    */\n\n    const toggleStarfield = () => {\n      let starfield = localStorage.getItem('starfield')\n\n      if (starfield === null) {\n        localStorage.setItem('starfield', 'enabled')\n        starfield = 'enabled'\n      }\n\n      if (starfield === 'enabled') {\n        // Toggle to disabled\n        setStarfield('disabled')\n      } else {\n        // Toggle to enabled\n        setStarfield('enabled')\n      }\n    }\n\n    const setStarfield = (starfield) => {\n      localStorage.setItem('starfield', starfield)\n\n      if (starfield === 'enabled') {\n        document.getElementById('starfield').style.display = 'block'\n      } else {\n        document.getElementById('starfield').style.display = 'none'\n      }\n    }\n\n  /*\n   * Render The ThemeController\n   */\n\n  return (\n    <div>\n      <div className={`theme-controller-background ${bgState}`}></div>\n      <div className=\"theme-controller-container\">\n        <button ref={toggleButtonRef} className={`toggle-button ${buttonState}`} onClick={() => {\n          setBgState('theme-controller-shown')\n          setButtonState('toggle-button-hidden')\n          setPanelState('selector-panel-shown')\n          document.body.style.overflowY = \"hidden\"\n        }}>\n          <i className=\"fa fa-cog\"></i>\n        </button>\n\n        <div ref={selectPanelRef} className={`selector-panel ${panelState}`}>\n          <div className=\"selector-panel-inner\">\n            <div className=\"selector-panel-title-group\">\n              <div className=\"selector-panel-title-group-center\">\n              <i className=\"fa fa-cog\"></i>\n              <h1>Settings</h1>\n              </div>\n            </div>\n\n            <div className=\"settings-main-content\">\n              <p>Switch between light & dark mode:</p>\n              <button className=\"settings-button\" onClick={toggleTheme}>Toggle Theme</button>\n\n              <p>Enable & disable starfield animation:</p>\n              <button className=\"settings-button\" onClick={toggleStarfield}>Toggle Starfield</button>\n            </div>\n\n            <button className=\"exit-button\" onClick={() => {\n              setBgState('theme-controller-hidden')\n              setButtonState('toggle-button-shown')\n              setPanelState('selector-panel-hidden')\n              document.body.style.overflowY = \"scroll\"\n            }}>\n              &laquo; Done\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}