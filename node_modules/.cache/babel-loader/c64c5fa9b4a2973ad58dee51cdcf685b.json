{"ast":null,"code":"var _jsxFileName = \"/Users/gavinshrader/Sites/gavinshr.com/src/ThemeController/ThemeController.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport './ThemeController.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeController() {\n  _s();\n\n  /*\n   * Handle State Changes For UI - Toggle Button, Close Select Panel, etc.\n   */\n  const [bgState, setBgState] = useState('theme-controller-hidden');\n  const [buttonState, setButtonState] = useState('toggle-button-shown');\n  const [panelState, setPanelState] = useState('selector-panel-hidden');\n  const toggleButtonRef = useRef(null);\n  const selectPanelRef = useRef(null);\n  useEffect(() => {\n    /* Close the settings menu when the user clicks outside of it */\n    const closeDrawer = event => {\n      if (toggleButtonRef.current && toggleButtonRef.current.contains(event.target)) {\n        return;\n      }\n\n      if (selectPanelRef.current && selectPanelRef.current.contains(event.target)) {\n        return;\n      }\n\n      setBgState('theme-controller-hidden');\n      setButtonState('toggle-button-shown');\n      setPanelState('selector-panel-hidden');\n      document.body.style.overflowY = \"scroll\";\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer);\n    return () => {\n      document.removeEventListener(\"mouseup\", closeDrawer);\n    };\n  }, []);\n  /*\n   * Handle Theme Toggling\n   */\n\n  const toggleTheme = () => {\n    const theme = localStorage.getItem('theme');\n\n    if (theme === 'dark') {\n      // Toggle to light\n      setTheme('light');\n    } else {\n      // Toggle to dark\n      setTheme('dark');\n    }\n  };\n\n  const setTheme = theme => {\n    document.documentElement.className = theme;\n    localStorage.setItem('theme', theme);\n  };\n\n  const getTheme = () => {\n    const theme = localStorage.getItem('theme');\n\n    if (theme === null) {\n      localStorage.setItem('theme', 'dark');\n    }\n\n    theme && setTheme(theme);\n  };\n\n  getTheme();\n  /*\n   * Render The ThemeController\n   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `theme-controller-background ${bgState}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-controller-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: toggleButtonRef,\n        className: `toggle-button ${buttonState}`,\n        onClick: () => {\n          setBgState('theme-controller-shown');\n          setButtonState('toggle-button-hidden');\n          setPanelState('selector-panel-shown');\n          document.body.style.overflowY = \"hidden\";\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-cog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: selectPanelRef,\n        className: `selector-panel ${panelState}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selector-panel-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selector-panel-title-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selector-panel-title-group-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-cog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-main-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Switch between light & dark mode:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"settings-button\",\n              onClick: toggleTheme,\n              children: \"Toggle Theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                paddingTop: \"25px\"\n              },\n              children: \"More settings coming soon...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exit-button\",\n            onClick: () => {\n              setBgState('theme-controller-hidden');\n              setButtonState('toggle-button-shown');\n              setPanelState('selector-panel-hidden');\n              document.body.style.overflowY = \"scroll\";\n            },\n            children: \"\\xAB Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeController, \"uvVZFHxid57NX5F86qgJo0yeeJM=\");\n\n_c = ThemeController;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeController\");","map":{"version":3,"sources":["/Users/gavinshrader/Sites/gavinshr.com/src/ThemeController/ThemeController.js"],"names":["useState","useEffect","useRef","ThemeController","bgState","setBgState","buttonState","setButtonState","panelState","setPanelState","toggleButtonRef","selectPanelRef","closeDrawer","event","current","contains","target","document","body","style","overflowY","addEventListener","removeEventListener","toggleTheme","theme","localStorage","getItem","setTheme","documentElement","className","setItem","getTheme","paddingTop"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport './ThemeController.css'\n\nexport default function ThemeController() {\n  /*\n   * Handle State Changes For UI - Toggle Button, Close Select Panel, etc.\n   */\n\n  const [bgState, setBgState] = useState('theme-controller-hidden')\n  const [buttonState, setButtonState] = useState('toggle-button-shown')\n  const [panelState, setPanelState] = useState('selector-panel-hidden')\n  const toggleButtonRef = useRef(null)\n  const selectPanelRef = useRef(null)\n\n  useEffect(() => {\n    /* Close the settings menu when the user clicks outside of it */\n    const closeDrawer = (event) => {\n      if (toggleButtonRef.current && toggleButtonRef.current.contains(event.target)) {\n        return;\n      }\n      if (selectPanelRef.current && selectPanelRef.current.contains(event.target)) {\n        return;\n      }\n\n      setBgState('theme-controller-hidden')\n      setButtonState('toggle-button-shown')\n      setPanelState('selector-panel-hidden')\n      document.body.style.overflowY = \"scroll\"\n\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer)\n    return () => {\n      document.removeEventListener(\"mouseup\", closeDrawer)\n    }\n  }, []);\n\n  /*\n   * Handle Theme Toggling\n   */\n\n   const toggleTheme = () => {\n     const theme = localStorage.getItem('theme');\n     if (theme === 'dark') {\n       // Toggle to light\n       setTheme('light')\n     } else {\n       // Toggle to dark\n       setTheme('dark')\n     }\n   }\n\n   const setTheme = (theme) => {\n     document.documentElement.className = theme;\n     localStorage.setItem('theme', theme);\n   }\n\n   const getTheme = () => {\n     const theme = localStorage.getItem('theme');\n\n     if (theme === null) {\n       localStorage.setItem('theme', 'dark');\n     }\n\n     theme && setTheme(theme);\n   }\n\n   getTheme();\n\n  /*\n   * Render The ThemeController\n   */\n\n  return (\n    <div>\n      <div className={`theme-controller-background ${bgState}`}></div>\n      <div className=\"theme-controller-container\">\n        <button ref={toggleButtonRef} className={`toggle-button ${buttonState}`} onClick={() => {\n          setBgState('theme-controller-shown')\n          setButtonState('toggle-button-hidden')\n          setPanelState('selector-panel-shown')\n          document.body.style.overflowY = \"hidden\"\n        }}>\n          <i className=\"fa fa-cog\"></i>\n        </button>\n\n        <div ref={selectPanelRef} className={`selector-panel ${panelState}`}>\n          <div className=\"selector-panel-inner\">\n            <div className=\"selector-panel-title-group\">\n              <div className=\"selector-panel-title-group-center\">\n              <i className=\"fa fa-cog\"></i>\n              <h1>Settings</h1>\n              </div>\n            </div>\n\n            <div className=\"settings-main-content\">\n              <p>Switch between light & dark mode:</p>\n              <button className=\"settings-button\" onClick={toggleTheme}>Toggle Theme</button>\n              <p style={{ paddingTop: \"25px\" }}>More settings coming soon...</p>\n            </div>\n\n            <button className=\"exit-button\" onClick={() => {\n              setBgState('theme-controller-hidden')\n              setButtonState('toggle-button-shown')\n              setPanelState('selector-panel-hidden')\n              document.body.style.overflowY = \"scroll\"\n            }}>\n              &laquo; Done\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}