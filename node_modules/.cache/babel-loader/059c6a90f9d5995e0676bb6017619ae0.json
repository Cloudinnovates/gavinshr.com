{"ast":null,"code":"var _jsxFileName = \"/Users/gavinshrader/Sites/gavinshr.com/src/App.js\",\n    _s = $RefreshSig$();\n\n/* https://reactrouter.com/docs/en/v6/getting-started/tutorial */\nimport { Outlet, NavLink, useLocation } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Starfield from './Starfield/Starfield';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [navListState, setNavListState] = useState('navListClosedNoTransition');\n  const [overlayState, setOverlayState] = useState('overlayHidden');\n  const drawerRef = useRef(null);\n  /*\n  Attempting to fix issues with iOS back swipe. When you swipe back quickly on iOS sometimes the starfield stops\n  animating entirely. The idea here is to determine when the BrowserRouter changes routes and then call a function to update\n  the starfield animation by starting and stopping it. I have a boolean flag to block the first page refresh since this occurs\n  right when you load the website and it causes issues. Right now this function is not working.\n   Another idea to test - is the fancy infinite button color animation causing this issue? The issue never occured before\n  I added this button animation on the nav bar links.\n  */\n\n  const [starfieldBlockState, setStarfieldBlockState] = useState('overlayHidden');\n  const location = useLocation();\n  useEffect(() => {\n    console.log(\"BrowserRouter route changed.\");\n    updateStarfieldAnimation();\n  }, [location]);\n\n  function updateStarfieldAnimation() {\n    var starfield = document.getElementById('stars');\n\n    if (starfield != null && starfieldBlockState == false) {\n      console.log(\"Restart starfield animation.\");\n      const clone = starfield.cloneNode(true);\n      clone.parentNode.replaceChild(clone, starfield);\n    }\n\n    setStarfieldBlockState(false);\n  }\n\n  ;\n  useEffect(() => {\n    /* If the screen resizes beyond our breakpoint, close the nav bar */\n    const handleResize = () => {\n      if (window.innerWidth > 700) {\n        setNavListState('navListClosedNoTransition');\n        setOverlayState('overlayHidden');\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    /* Close the drawer when the user clicks outside of it */\n\n    const closeDrawer = event => {\n      if (drawerRef.current && drawerRef.current.contains(event.target)) {\n        return;\n      }\n\n      setNavListState('navListClosed');\n      setOverlayState('overlayHidden');\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer);\n    return () => {\n      document.removeEventListener(\"mouseup\", closeDrawer);\n      document.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-screen-fill\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backgroundFixed\",\n      children: /*#__PURE__*/_jsxDEV(Starfield, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay ${overlayState}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(HashLink, {\n            style: {\n              color: \"white\",\n              textDecoration: \"none\"\n            },\n            smooth: true,\n            to: \"/#home\",\n            children: \"Gavin Shrader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hamburgerButton\",\n          onClick: () => {\n            setNavListState('navListOpen');\n            setOverlayState('overlayShown');\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburgerLines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          ref: drawerRef,\n          className: `navUl ${navListState}`,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(HashLink, {\n              className: \"navLink\",\n              smooth: true,\n              to: \"/#home\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(HashLink, {\n              className: \"navLink\",\n              smooth: true,\n              to: \"/#skills\",\n              children: \"Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(HashLink, {\n              className: \"navLink\",\n              smooth: true,\n              to: \"/#resume\",\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(HashLink, {\n              className: \"navLink\",\n              smooth: true,\n              to: \"/#contact\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              className: \"navLink\",\n              to: \"/projects\",\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              className: \"navLink\",\n              to: \"/blog\",\n              children: \"Blog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"navLink\",\n              href: \"https://github.com/gshrdr/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"GitHub \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navUlLi liBottom\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"navLink liExitButton\",\n              onClick: () => {\n                setNavListState('navListClosed');\n                setOverlayState('overlayHidden');\n              },\n              children: \"\\xAB Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"seOL5RshMGH75Yawg2d9HRv19Z0=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gavinshrader/Sites/gavinshr.com/src/App.js"],"names":["Outlet","NavLink","useLocation","HashLink","React","useState","useEffect","useRef","Starfield","App","navListState","setNavListState","overlayState","setOverlayState","drawerRef","starfieldBlockState","setStarfieldBlockState","location","console","log","updateStarfieldAnimation","starfield","document","getElementById","clone","cloneNode","parentNode","replaceChild","handleResize","window","innerWidth","addEventListener","closeDrawer","event","current","contains","target","removeEventListener","color","textDecoration"],"mappings":"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","sourcesContent":["/* https://reactrouter.com/docs/en/v6/getting-started/tutorial */\n\nimport { Outlet, NavLink, useLocation } from \"react-router-dom\"\nimport { HashLink } from \"react-router-hash-link\"\nimport React, { useState, useEffect, useRef } from \"react\"\nimport Starfield from './Starfield/Starfield'\nimport './App.css'\n\nfunction App() {\n  const [navListState, setNavListState] = useState('navListClosedNoTransition')\n  const [overlayState, setOverlayState] = useState('overlayHidden')\n  const drawerRef = useRef(null)\n\n  /*\n  Attempting to fix issues with iOS back swipe. When you swipe back quickly on iOS sometimes the starfield stops\n  animating entirely. The idea here is to determine when the BrowserRouter changes routes and then call a function to update\n  the starfield animation by starting and stopping it. I have a boolean flag to block the first page refresh since this occurs\n  right when you load the website and it causes issues. Right now this function is not working.\n\n  Another idea to test - is the fancy infinite button color animation causing this issue? The issue never occured before\n  I added this button animation on the nav bar links.\n  */\n\n  const [starfieldBlockState, setStarfieldBlockState] = useState('overlayHidden')\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log(\"BrowserRouter route changed.\");\n    updateStarfieldAnimation();\n  }, [location]);\n\n  function updateStarfieldAnimation() {\n    var starfield = document.getElementById('stars')\n    if (starfield != null && starfieldBlockState == false) {\n      console.log(\"Restart starfield animation.\")\n      const clone = starfield.cloneNode(true);\n      clone.parentNode.replaceChild(clone, starfield)\n    }\n    setStarfieldBlockState(false);\n  };\n\n  useEffect(() => {\n    /* If the screen resizes beyond our breakpoint, close the nav bar */\n    const handleResize = () => {\n      if (window.innerWidth > 700) {\n        setNavListState('navListClosedNoTransition')\n        setOverlayState('overlayHidden')\n      }\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    /* Close the drawer when the user clicks outside of it */\n    const closeDrawer = (event) => {\n      if (drawerRef.current && drawerRef.current.contains(event.target)) {\n        return;\n      }\n\n      setNavListState('navListClosed')\n      setOverlayState('overlayHidden')\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer)\n    return () => {\n      document.removeEventListener(\"mouseup\", closeDrawer)\n      document.removeEventListener(\"resize\", handleResize)\n\n    }\n  }, []);\n\n  return (\n    <div className=\"main-screen-fill\">\n      <div id=\"home\"></div> {/* Anchor used to scroll to \"home\" - this is at the top of the nav bar so the home button scrolls to the top of the page */}\n\n      <div className=\"backgroundFixed\">\n        <Starfield />\n      </div>\n\n      <div className={`overlay ${overlayState}`}></div>\n\n      <div className=\"navWrapper\">\n        <nav className=\"navigation\">\n          <h1 className=\"logo\"><HashLink style={{ color: \"white\", textDecoration: \"none\" }} smooth to=\"/#home\">Gavin Shrader</HashLink></h1>\n\n          <button className=\"hamburgerButton\" onClick={() => {\n            setNavListState('navListOpen')\n            setOverlayState('overlayShown')\n          }}>\n            <div className=\"hamburgerLines\"></div>\n          </button>\n\n          <ul ref={drawerRef} className={`navUl ${navListState}`}>\n            <li className=\"navUlLi\"><HashLink className=\"navLink\" smooth to=\"/#home\">Home</HashLink></li>\n            <li className=\"navUlLi\"><HashLink className=\"navLink\" smooth to=\"/#skills\">Skills</HashLink></li>\n            <li className=\"navUlLi\"><HashLink className=\"navLink\" smooth to=\"/#resume\">Resume</HashLink></li>\n            <li className=\"navUlLi\"><HashLink className=\"navLink\" smooth to=\"/#contact\">Contact</HashLink></li>\n            <li className=\"navUlLi\"><NavLink className=\"navLink\" to=\"/projects\">Projects</NavLink></li>\n            <li className=\"navUlLi\"><NavLink className=\"navLink\" to=\"/blog\">Blog</NavLink></li>\n            <li className=\"navUlLi\"><a className=\"navLink\" href=\"https://github.com/gshrdr/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub &rarr;</a></li>\n            <li className=\"navUlLi liBottom\">\n              <button className=\"navLink liExitButton\" onClick={() => {\n                setNavListState('navListClosed')\n                setOverlayState('overlayHidden')\n              }}>\n                &laquo; Close\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}