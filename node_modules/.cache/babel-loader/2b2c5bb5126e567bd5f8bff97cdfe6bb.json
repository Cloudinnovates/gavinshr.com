{"ast":null,"code":"var _jsxFileName = \"/Users/gavinshrader/Sites/WebDevJob/ReactJS-Experiments/website-navigation/src/App.js\",\n    _s = $RefreshSig$();\n\n/* https://reactrouter.com/docs/en/v6/getting-started/tutorial */\nimport { Outlet, Link } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [navListState, setNavListState] = useState('navListClosedNoTransition');\n  const drawerRef = useRef(null);\n  useEffect(() => {\n    /* If the screen resizes beyond our breakpoint, close the nav bar */\n    const handleResize = () => {\n      if (window.innerWidth > 640) {\n        setNavListState('navListClosedNoTransition');\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    /* Close the drawer when the user clicks outside of it */\n\n    const closeDrawer = event => {\n      if (drawerRef.current && drawerRef.current.contains(event.target)) {\n        return;\n      }\n\n      setNavListState('navListClosed');\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer);\n    return () => document.removeEventListener(\"mouseup\", closeDrawer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Gavin Shrader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hamburgerButton\",\n        onClick: () => setNavListState('navListOpen'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hamburgerLines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: drawerRef,\n        className: navListState,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/invoices\",\n          children: \"Invoices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/blog\",\n          children: \"Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"liBottom\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"liExitButton\",\n            onClick: () => setNavListState('navListClosed'),\n            children: \"Exit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tKfxht3Zhoj+DTMk8OWow3Sb8VQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gavinshrader/Sites/WebDevJob/ReactJS-Experiments/website-navigation/src/App.js"],"names":["Outlet","Link","React","useState","useEffect","useRef","App","navListState","setNavListState","drawerRef","handleResize","window","innerWidth","addEventListener","closeDrawer","event","current","contains","target","document","removeEventListener"],"mappings":";;;AAAA;AAEA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,kBAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,2BAAD,CAAhD;AACA,QAAMM,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMM,YAAY,GAAG,MAAM;AACzB,UAAIC,MAAM,CAACC,UAAP,GAAoB,GAAxB,EAA6B;AAC3BJ,QAAAA,eAAe,CAAC,2BAAD,CAAf;AACD;AACF,KAJD;;AAMAG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AAEA;;AACA,UAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAIN,SAAS,CAACO,OAAV,IAAqBP,SAAS,CAACO,OAAV,CAAkBC,QAAlB,CAA2BF,KAAK,CAACG,MAAjC,CAAzB,EAAmE;AACjE;AACD;;AAEDV,MAAAA,eAAe,CAAC,eAAD,CAAf;AACD,KAND;;AAQAW,IAAAA,QAAQ,CAACN,gBAAT,CAA0B,SAA1B,EAAqCC,WAArC;AACA,WAAO,MAAMK,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,EAAwCN,WAAxC,CAAb;AACD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,MAAMN,eAAe,CAAC,aAAD,CAAlE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AAAI,QAAA,GAAG,EAAEC,SAAT;AAAoB,QAAA,SAAS,EAAEF,YAA/B;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,QACyC,GADzC,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,eAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/CQF,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["/* https://reactrouter.com/docs/en/v6/getting-started/tutorial */\n\nimport { Outlet, Link } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [navListState, setNavListState] = useState('navListClosedNoTransition');\n  const drawerRef = useRef(null);\n\n  useEffect(() => {\n    /* If the screen resizes beyond our breakpoint, close the nav bar */\n    const handleResize = () => {\n      if (window.innerWidth > 640) {\n        setNavListState('navListClosedNoTransition')\n      }\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    /* Close the drawer when the user clicks outside of it */\n    const closeDrawer = (event) => {\n      if (drawerRef.current && drawerRef.current.contains(event.target)) {\n        return;\n      }\n\n      setNavListState('navListClosed');\n    };\n\n    document.addEventListener(\"mouseup\", closeDrawer);\n    return () => document.removeEventListener(\"mouseup\", closeDrawer);\n  }, []);\n\n  return (\n    <div className=\"navWrapper\">\n      <nav>\n        <h1 className=\"logo\">Gavin Shrader</h1>\n\n        <button className=\"hamburgerButton\" onClick={() => setNavListState('navListOpen')}>\n          <div className=\"hamburgerLines\"></div>\n        </button>\n\n        <ul ref={drawerRef} className={navListState}>\n          <Link to=\"/invoices\">Invoices</Link> |{\" \"}\n          <Link to=\"/blog\">Blog</Link>\n          <li className=\"liBottom\">\n            <button className=\"liExitButton\" onClick={() => setNavListState('navListClosed')}>Exit</button>\n          </li>\n        </ul>\n      </nav>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}